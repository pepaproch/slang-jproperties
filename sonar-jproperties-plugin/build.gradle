plugins {
    id 'com.github.johnrengelman.shadow' version '4.0.2'
}

ext {
    kotlinVersion = '1.3.10'
}

dependencies {
    compile project(':slang-api')
    compile project(':slang-checks')
    compile project(':slang-plugin')
    compileOnly 'org.sonarsource.sonarqube:sonar-plugin-api'
    compile 'org.sonarsource.analyzer-commons:sonar-analyzer-commons'
    compile group: 'org.sonarsource.sslr', name: 'sslr', version: '1.23', ext: 'pom'
    compile group: 'org.sonarsource.sslr', name: 'sslr-core', version: '1.23'
    testCompile 'junit:junit'
    testCompile 'org.assertj:assertj-core'
    testCompile 'org.mockito:mockito-core'
    testCompile project(':slang-antlr')
    testCompile project(':slang-testing')
}

tasks.withType(JavaCompile) {
    // Prevent warning: Gradle 5.0 will ignore annotation processors
    options.compilerArgs += [ "-proc:none" ]
}

jar {
    manifest {
        def displayVersion = (project.buildNumber == null ? version : version.substring(0, version.lastIndexOf('.')) + " (build ${project.buildNumber})")
        def buildDate = new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        attributes(
                'Build-Time': buildDate,
                'Implementation-Build': 'git rev-parse HEAD'.execute().text.trim(),
                'Plugin-BuildDate': buildDate,
                'Plugin-ChildFirstClassLoader': 'false',
                'Plugin-Class': 'org.pepaproch.jproperties.plugin.JpropertiesPlugin',
                'Plugin-Description': 'Code Analyzer for Jproperties',
                'Plugin-Developers': 'pepaproch@gmail.com',
                'Plugin-Display-Version': displayVersion,
                'Plugin-Key': 'slangjprop',
                'Plugin-License': 'GNU LGPL 3',
                'Plugin-Name': 'SonarJproperties',
                'Plugin-Organization': 'SonarSource',
                'Plugin-OrganizationUrl': 'http://pepaproch.com',
                'Plugin-SourcesUrl': 'https://github.com/pepaproch/slang-jproperties',
                'Plugin-Version': version,
                'Sonar-Version': '6.7',
                'SonarLint-Supported': 'true',
                'Version': "${version}",
        )
    }
}

shadowJar {
    minimize { }
    doLast {
        enforceJarSizeAndCheckContent(new File(libsDir, shadowJar.archiveName), 14_000L, 6_500_000L)
    }
}

artifacts {
    archives shadowJar
}

artifactoryPublish.skip = false

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact source: shadowJar, classifier: null
            artifact sourcesJar
            artifact javadocJar
        }
    }
}
